{"version":3,"sources":["components/AppBar/AppBar.jsx","services/fetch/fetch-api.js","components/HomePage/HomePage.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","components/SearchBar/SearchBar.jsx","components/MoviesPage/MoviesPage.jsx","components/NotFoundView/NotFoundView.jsx","components/App/App.js","index.js"],"names":["AppBar","className","exact","to","activeClassName","apiFetch","fetchApi","URL","search","fetch","then","res","console","log","ok","json","HomePage","params","useState","gallery","setGallery","url","useRouteMatch","useEffect","movies","results","window","localStorage","setItem","map","name","original_title","id","Cast","movieId","useParams","cast","setCast","queryParams","actors","catch","error","profile_path","character","src","alt","width","Reviews","reviews","setReviews","createAvatar","avatar","startsWith","slice","author","content","author_details","avatar_path","length","MovieDetailsPage","movie","setMovie","history","useHistory","location","useLocation","createName","title","onClick","pathname","push","state","from","goBack","poster_path","backdrop_path","parseInt","release_date","vote_average","overview","genres","getItem","path","Searchbar","onSubmit","setSearch","e","preventDefault","type","value","autoComplete","onChange","evt","target","toLowerCase","trim","autoFocus","placeholder","MoviesPage","query","setQuery","key","defaultValue","JSON","parse","setState","stringify","useLocalStorage","setMovies","clear","NotFoundView","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1eb92b5.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './AppBar.css';\n\nexport default function AppBar() {\n  return (\n    <header className=\"header\">\n      <nav>\n        <NavLink\n          exact\n          className=\"home-link\"\n          to=\"/goit-react-hw-05-movies\"\n          activeClassName=\"activelink\"\n        >\n          Home\n        </NavLink>\n        <NavLink\n          className=\"home-link\"\n          to=\"/goit-react-hw-05-movies/movies\"\n          activeClassName=\"activelink\"\n        >\n          Movies\n        </NavLink>\n      </nav>\n    </header>\n  );\n}\n","const KEY = '13b30df76de0172d03d948f4ffbca658';\n// const URL = 'https://api.themoviedb.org/3/trending/all/day?';\n\nfunction fetchApi(URL, search) {\n  return fetch(\n    `${URL}api_key=${KEY}&language=en-US&page=1&include_adult=false=quere&query=${search}`,\n  ).then(res => {\n    console.log(res, `add`);\n    if (res.ok) {\n      return res.json();\n    }\n  });\n}\nconst apiFetch = { fetchApi };\nexport default apiFetch;\n","import { useState, useEffect } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport { NavLink, useRouteMatch } from 'react-router-dom';\n\nexport default function HomePage(params) {\n  const URL = 'https://api.themoviedb.org/3/trending/movie/week?';\n  const [gallery, setGallery] = useState('');\n  const { url } = useRouteMatch();\n  useEffect(() => {\n    apiFetch.fetchApi(URL).then(movies => {\n      setGallery(movies.results);\n      window.localStorage.setItem('url', url);\n    });\n\n    return () => {};\n  }, [url]);\n  return (\n    <div className=\"home-wrap\">\n      <h1>Trending today</h1>\n\n      {gallery && (\n        <ul>\n          {gallery.map(\n            ({ name, original_title, id }) => (\n              <li key={id}>\n                <NavLink\n                  className=\"home-item\"\n                  to={`/goit-react-hw-05-movies/movies/${id}`}\n                >\n                  {name ? name : original_title}\n                </NavLink>\n              </li>\n            ),\n            // <NavLink>{movie.name}</NavLink>\n          )}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport { useParams } from 'react-router-dom';\n\nexport default function Cast(params) {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  let queryParams = `https://api.themoviedb.org/3/movie/${movieId}/credits?`;\n\n  useEffect(() => {\n    apiFetch\n      .fetchApi(queryParams)\n      .then(actors => {\n        console.log(actors, `actors`);\n        setCast(actors.cast);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // return () => {\n    //     cleanup\n    // }\n  }, [queryParams]);\n  return (\n    <div className=\"cast-wrap\">\n      <p>Additional Information</p>\n      <ul className=\"cast-list\">\n        {cast &&\n          cast.map(({ name, profile_path, character, id }) => (\n            <li className=\"cast-item\" key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/original${profile_path}`}\n                alt={name}\n                width=\"150\"\n              />\n              <h3>{name}</h3>\n              <p>\n                Character: <span>{character}</span>\n              </p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport { useParams } from 'react-router-dom';\n\nexport default function Reviews(params) {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  let queryParams = `https://api.themoviedb.org/3/movie/${movieId}/reviews?`;\n\n  useEffect(() => {\n    apiFetch\n      .fetchApi(queryParams)\n      .then(reviews => {\n        console.log(reviews, `reviews`);\n        setReviews(reviews.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // return () => {\n    //     cleanup\n    // }\n  }, [queryParams]);\n\n  const createAvatar = avatar => {\n    console.log(avatar);\n    if (avatar) {\n      return avatar.startsWith('/https')\n        ? avatar.slice(1)\n        : `https://image.tmdb.org/t/p/original${avatar}`;\n    }\n    //  return avatar.startsWith('https') ? avatar :`https://image.tmdb.org/t/p/original${avatar}`;\n  };\n  return (\n    <div className=\"reviews-wrap\">\n      <ul className=\"reviews-list\">\n        {reviews &&\n          reviews.map(({ author, content, id, author_details }) => (\n            <li className=\"reviews-item\" key={id}>\n              <div className=\"reviews-profile\">\n                <h3>{author}</h3>\n                <img\n                  className=\"reviews-img\"\n                  key={author_details.id}\n                  src={createAvatar(author_details.avatar_path)}\n                  alt=\"\"\n                  width=\"100\"\n                />\n              </div>\n\n              <p className=\"reviews-description\">{content}</p>\n            </li>\n          ))}\n      </ul>\n      {reviews.length === 0 && <p>We don't have ane reviews for this movie.</p>}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport {\n  Route,\n  useParams,\n  NavLink,\n  useHistory,\n  useLocation,\n  useRouteMatch,\n} from 'react-router-dom';\n\nimport './MovieDetailsPag.css';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  let queryParams = `https://api.themoviedb.org/3/movie/${movieId}?`;\n\n  const [movie, setMovie] = useState([]);\n  const { url } = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  console.log(movieId, `quy`);\n\n  useEffect(() => {\n    apiFetch\n      .fetchApi(queryParams)\n      .then(movie => {\n        console.log(movie, `movie`);\n        setMovie(movie);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // return () => {\n    //     cleanup\n    // }\n  }, [queryParams]);\n\n  const handleGoBack = () => {\n    console.log(url, 'url');\n    console.log(history, `HISTORY`);\n    console.log(location.pathname);\n    if (location.pathname === url) {\n      history.goBack();\n      return;\n    }\n\n    history.push(location.state.from);\n  };\n  const createName = () => {\n    return movie.title ? movie.title : movie.original_title;\n  };\n  const createPoster = () => {\n    return movie.poster_path ? movie.poster_path : movie.backdrop_path;\n  };\n  return (\n    <div className=\"wrap-page\">\n      <button className=\"page-btn\" onClick={handleGoBack}>\n        Go Back\n      </button>\n      <div className=\"card-page\">\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/original${createPoster()}`}\n            alt={createName() ? createName() : 'No info'}\n            width=\"300\"\n          />\n        </div>\n        <div className=\"description-page\">\n          <h1>\n            {createName() ? createName() : 'No info'}\n            <span>({parseInt(movie.release_date)})</span>\n          </h1>\n          <p className=\"scope-page\">\n            User scope: <span>{movie.vote_average * 10}% </span>\n          </p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p className=\"genres-page\">\n            {movie.genres &&\n              movie.genres.map(({ name, id }) => <span key={id}>{name}</span>)}\n          </p>\n        </div>\n      </div>\n      <div className=\"wrap-dop\">\n        <NavLink\n          className=\"link-page\"\n          key=\"1\"\n          to={{\n            pathname: `/goit-react-hw-05-movies/movies/${movieId}/cast`,\n            state: { from: `${window.localStorage.getItem('url')}` },\n          }}\n          activeClassName=\"activelink\"\n        >\n          Cast{' '}\n        </NavLink>\n        <NavLink\n          className=\"link-page\"\n          key=\"2\"\n          to={{\n            pathname: `/goit-react-hw-05-movies/movies/${movieId}/reviews`,\n            state: { from: `${window.localStorage.getItem('url')}` },\n          }}\n          activeClassName=\"activelink\"\n        >\n          Reviews\n        </NavLink>\n      </div>\n      <div>\n        <Route path=\"/goit-react-hw-05-movies/movies/:movieId/cast\">\n          <Cast />\n        </Route>\n        <Route path=\"/goit-react-hw-05-movies/movies/:movieId/reviews\">\n          <Reviews />\n        </Route>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ onSubmit }) {\n  const [search, setSearch] = useState('');\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleSearchChange = evt => {\n    setSearch(evt.target.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(search);\n    history.push({ ...location, search: `query=${search}` });\n\n    // if (location.search !== '') {\n\n    // }\n    // console.log(search, `daaa`)\n    // if (search.trim() === '') {\n\n    setSearch('');\n\n    //     return;\n\n    // }\n  };\n\n  return (\n    <div className=\"form-wrap\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          value={search}\n          autoComplete=\"off\"\n          onChange={handleSearchChange}\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n        <button className=\"form-btn\" type=\"submit\" aria-label=\"Search\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  search: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport { NavLink, useLocation, useRouteMatch } from 'react-router-dom';\nimport Searchbar from '../SearchBar/SearchBar';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n};\n\nexport default function MoviesPage(params) {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useLocalStorage('movies', []);\n  const location = useLocation();\n  const { url } = useRouteMatch();\n  console.log(url);\n  let queryParams = `https://api.themoviedb.org/3/search/movie?`;\n\n  useEffect(() => {\n    if (location.search === '') {\n      window.localStorage.clear();\n      setMovies([]);\n      return;\n    }\n    if (!query) {\n      console.log(`вы зашли в movies`);\n      return;\n    }\n\n    apiFetch\n      .fetchApi(queryParams, query)\n      .then(movies => {\n        setMovies(movies.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    //  if (location.search) {\n    //   console.log(`воть`)\n    // }\n\n    // return () => {\n    //     cleanup\n    // }\n  }, [location.search, query, queryParams, setMovies]);\n\n  const handleSubmit = search => {\n    //  window.localStorage.setItem('search', search);\n    window.localStorage.setItem('url', url + `?query=${search}`);\n    setQuery(search);\n    console.log(url, `url`);\n  };\n\n  return (\n    <div className=\"movies-wrap\">\n      <Searchbar onSubmit={handleSubmit}></Searchbar>\n\n      {movies.length !== 0 ? (\n        <ul className=\"movies-list\">\n          {movies.map(({ name, original_title, id }) => (\n            <li key={id}>\n              <NavLink\n                className=\"movies-item\"\n                to={`/goit-react-hw-05-movies/movies/${id}`}\n              >\n                {name ? name : original_title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Enter correct film's name</p>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function NotFoundView(params) {\n  return (\n    <div>\n      <h1>404 Not found pages</h1>\n    </div>\n  );\n}\n","import { Switch, Route } from 'react-router-dom';\nimport AppBar from '../AppBar/AppBar';\nimport HomePage from '../HomePage';\nimport MovieDetailsPage from '../MovieDetailsPage/MovieDetailsPage';\nimport MoviesPage from '../MoviesPage';\nimport NotFoundView from '../NotFoundView/NotFoundView';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppBar></AppBar>\n      <Switch>\n        {/* <Route exact path=\"/\">\n          <HomePage />\n        </Route> */}\n        <Route exact path=\"/goit-react-hw-05-movies\">\n          <HomePage />\n        </Route>\n\n        <Route path=\"/goit-react-hw-05-movies/movies/:movieId\">\n          <MovieDetailsPage />\n        </Route>\n        <Route path=\"/goit-react-hw-05-movies/movies\">\n          <MoviesPage />\n        </Route>\n        <Route>\n          <NotFoundView />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}