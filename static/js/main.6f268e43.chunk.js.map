{"version":3,"sources":["components/AppBar/AppBar.jsx","services/fetch/fetch-api.js","components/HomePage/HomePage.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","components/SearchBar/SearchBar.jsx","components/MoviesPage/MoviesPage.jsx","components/NotFoundView/NotFoundView.jsx","components/App/App.js","index.js"],"names":["AppBar","className","exact","to","activeClassName","apiFetch","fetchApi","URL","search","fetch","then","res","console","log","ok","json","HomePage","params","useState","gallery","setGallery","useEffect","movies","results","map","name","original_title","id","Cast","movieId","useParams","cast","setCast","queryParams","actors","catch","error","profile_path","character","src","alt","width","Reviews","reviews","setReviews","author","content","rey","length","MovieDetailsPage","movie","setMovie","history","useHistory","createName","title","onClick","goBack","poster_path","backdrop_path","parseInt","release_date","overview","genres","path","Searchbar","onSubmit","setSearch","location","useLocation","e","preventDefault","push","type","value","autoComplete","onChange","evt","target","toLowerCase","trim","autoFocus","placeholder","MoviesPage","query","setQuery","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","setItem","stringify","useLocalStorage","setMovies","clear","NotFoundView","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f268e43.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport './AppBar.css';\n\nexport default function AppBar() {\n  return (\n    <header className=\"header\">\n      <nav>\n        <NavLink\n          exact\n          className=\"home-link\"\n          to=\"/goit-react-hw-05-movies\"\n          activeClassName=\"activelink\"\n        >\n          Home\n        </NavLink>\n        <NavLink\n          className=\"home-link\"\n          to=\"/goit-react-hw-05-movies/movies\"\n          activeClassName=\"activelink\"\n        >\n          Movies\n        </NavLink>\n      </nav>\n    </header>\n  );\n}\n","const KEY = '13b30df76de0172d03d948f4ffbca658';\n// const URL = 'https://api.themoviedb.org/3/trending/all/day?';\n\nfunction fetchApi(URL, search) {\n  return fetch(\n    `${URL}api_key=${KEY}&language=en-US&page=1&include_adult=false=quere&query=${search}`,\n  ).then(res => {\n    console.log(res, `add`);\n    if (res.ok) {\n      return res.json();\n    }\n  });\n}\nconst apiFetch = { fetchApi };\nexport default apiFetch;\n","import { useState, useEffect } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport { Link } from 'react-router-dom';\n\nexport default function HomePage(params) {\n  const URL = 'https://api.themoviedb.org/3/trending/movie/week?';\n  const [gallery, setGallery] = useState('');\n  useEffect(() => {\n    apiFetch.fetchApi(URL).then(movies => {\n      setGallery(movies.results);\n    });\n\n    return () => {};\n  }, []);\n  return (\n    <div>\n      <h1>Hello World</h1>\n\n      {gallery && (\n        <ul>\n          {gallery.map(\n            ({ name, original_title, id }) => (\n              <li key={id}>\n                <Link to={`/goit-react-hw-05-movies/movies/${id}`}>\n                  {name ? name : original_title}\n                </Link>\n              </li>\n            ),\n            // <NavLink>{movie.name}</NavLink>\n          )}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport { Route, NavLink, useParams, Link } from 'react-router-dom';\n\nexport default function Cast(params) {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  let queryParams = `https://api.themoviedb.org/3/movie/${movieId}/credits?`;\n\n  useEffect(() => {\n    apiFetch\n      .fetchApi(queryParams)\n      .then(actors => {\n        setCast(actors.cast);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // return () => {\n    //     cleanup\n    // }\n  }, [queryParams]);\n  return (\n    <div>\n      <p>Additional Information</p>\n      <ul>\n        {cast &&\n          cast.map(({ name, profile_path, character, id }) => (\n            <li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/original${profile_path}`}\n                alt={name}\n                width=\"150\"\n              />\n              <h3>{name}</h3>\n              <p>\n                Character: <span>{character}</span>\n              </p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport { Route, NavLink, useParams, Link } from 'react-router-dom';\n\nexport default function Reviews(params) {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  let queryParams = `https://api.themoviedb.org/3/movie/${movieId}/reviews?`;\n\n  useEffect(() => {\n    apiFetch\n      .fetchApi(queryParams)\n      .then(reviews => {\n        setReviews(reviews.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // return () => {\n    //     cleanup\n    // }\n  }, [queryParams]);\n  return (\n    <div>\n      <ul>\n        {reviews &&\n          reviews.map(({ author, content, id }) => (\n            <li rey={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n      </ul>\n      {reviews.length === 0 && <p>We don't have ane reviews for this movie.</p>}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport { Route, useParams, Link, useHistory } from 'react-router-dom';\n\nimport './MovieDetailsPag.css';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  let queryParams = `https://api.themoviedb.org/3/movie/${movieId}?`;\n\n  const [movie, setMovie] = useState([]);\n  const history = useHistory();\n  console.log(movieId, `quy`);\n\n  useEffect(() => {\n    apiFetch\n      .fetchApi(queryParams)\n      .then(movie => {\n        setMovie(movie);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // return () => {\n    //     cleanup\n    // }\n  }, [queryParams]);\n  const createName = () => {\n    return movie.title ? movie.title : movie.original_title;\n  };\n  const createPoster = () => {\n    return movie.poster_path ? movie.poster_path : movie.backdrop_path;\n  };\n  return (\n    <div key={movieId}>\n      <div className=\"wrap-page\" key={movieId}>\n        <div>\n          <button\n            onClick={() => {\n              history.goBack();\n            }}\n          >\n            Back\n          </button>\n          <img\n            src={`https://image.tmdb.org/t/p/original${createPoster()}`}\n            alt={createName() ? createName() : 'No info'}\n            width=\"300\"\n          />\n        </div>\n        <div>\n          <h1>\n            {createName() ? createName() : 'No info'}\n            <span>({parseInt(movie.release_date)})</span>\n          </h1>\n          <p>User scope: </p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {movie.genres &&\n              movie.genres.map(({ name }) => <span>{name}</span>)}\n          </p>\n        </div>\n      </div>\n      <div className=\"wrap-dop\">\n        <Link key=\"1\" to={`/goit-react-hw-05-movies/movies/${movieId}/cast`}>\n          Cast{' '}\n        </Link>\n        <Link key=\"2\" to={`/goit-react-hw-05-movies/movies/${movieId}/reviews`}>\n          Reviews\n        </Link>\n      </div>\n      <div>\n        <Route path=\"/goit-react-hw-05-movies/movies/:movieId/cast\">\n          <Cast />\n        </Route>\n        <Route path=\"/goit-react-hw-05-movies/movies/:movieId/reviews\">\n          <Reviews />\n        </Route>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ onSubmit }) {\n  const [search, setSearch] = useState('');\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleSearchChange = evt => {\n    setSearch(evt.target.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(search);\n    history.push({ ...location, search: `query=${search}` });\n\n    // if (location.search !== '') {\n\n    // }\n    // console.log(search, `daaa`)\n    // if (search.trim() === '') {\n\n    //     setSearch('');\n\n    //     return;\n\n    // }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          value={search}\n          autoComplete=\"off\"\n          onChange={handleSearchChange}\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n        <button type=\"submit\" aria-label=\"Search\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  search: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport {\n  BrowserRouter,\n  Route,\n  NavLink,\n  useParams,\n  useHistory,\n  useLocation,\n  Link,\n} from 'react-router-dom';\nimport Searchbar from '../SearchBar/SearchBar';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n};\n\nexport default function MoviesPage(params) {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useLocalStorage('movies', []);\n  const location = useLocation();\n  let queryParams = `https://api.themoviedb.org/3/search/movie?`;\n\n  useEffect(() => {\n    if (location.search === '') {\n      window.localStorage.clear();\n      setMovies([]);\n      return;\n    }\n\n    apiFetch\n      .fetchApi(queryParams, query)\n      .then(movies => {\n        setMovies(movies.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    //  if (location.search) {\n    //   console.log(`воть`)\n    // }\n\n    // return () => {\n    //     cleanup\n    // }\n  }, [query, queryParams, location.search, setMovies]);\n\n  const handleSubmit = search => {\n    setQuery(search);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleSubmit}></Searchbar>\n\n      {movies.length !== 0 ? (\n        <ul>\n          {movies.map(({ name, original_title, id }) => (\n            <li key={id}>\n              <Link to={`/goit-react-hw-05-movies/movies/${id}`}>\n                {name ? name : original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <li>Enter correct film's name</li>\n      )}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\n\nexport default function NotFoundView(params) {\n  return (\n    <div>\n      <h1>404 Not found pages</h1>\n    </div>\n  );\n}\n","import { Switch, Route } from 'react-router-dom';\nimport AppBar from '../AppBar/AppBar';\nimport HomePage from '../HomePage';\nimport MovieDetailsPage from '../MovieDetailsPage/MovieDetailsPage';\nimport MoviesPage from '../MoviesPage';\nimport NotFoundView from '../NotFoundView/NotFoundView';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppBar></AppBar>\n      <Switch>\n        {/* <Route exact path=\"/\">\n          <HomePage />\n        </Route> */}\n        <Route exact path=\"/goit-react-hw-05-movies\">\n          <HomePage />\n        </Route>\n\n        <Route path=\"/goit-react-hw-05-movies/movies/:movieId\">\n          <MovieDetailsPage />\n        </Route>\n        <Route path=\"/goit-react-hw-05-movies/movies\">\n          <MoviesPage />\n        </Route>\n        <Route>\n          <NotFoundView />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}