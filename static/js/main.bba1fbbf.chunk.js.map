{"version":3,"sources":["components/AppBar/AppBar.jsx","services/fetch/fetch-api.js","components/HomePage/HomePage.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","components/MoviesPage/MoviesPage.jsx","components/NotFoundView/NotFoundView.jsx","components/App/App.js","index.js"],"names":["AppBar","className","exact","to","activeClassName","apiFetch","fetchApi","URL","fetch","then","res","console","log","ok","json","HomePage","params","useState","gallery","setGallery","useEffect","movies","results","map","name","original_title","id","Cast","movieId","useParams","cast","setCast","queryParams","actors","catch","error","profile_path","character","src","alt","width","Reviews","reviews","setReviews","author","content","length","MovieDetailsPage","movie","setMovie","createName","title","poster_path","backdrop_path","parseInt","release_date","overview","genres","path","MoviesPage","NotFoundView","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bba1fbbf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\r\nimport './AppBar.css'\r\n\r\nexport default function AppBar() {\r\n\r\n    return (\r\n        <header className='header'>\r\n            <nav>\r\n                <NavLink exact className='home-link' to='/' activeClassName='activelink'>Home</NavLink>\r\n                <NavLink className='home-link' to='/movies' activeClassName='activelink'>Movies</NavLink> \r\n            </nav>\r\n           \r\n        </header>\r\n    \r\n);\r\n}","const KEY = '13b30df76de0172d03d948f4ffbca658';\n// const URL = 'https://api.themoviedb.org/3/trending/all/day?';\nconst page = 1;\n\nfunction fetchApi(URL) {\n  return fetch(`${URL}api_key=${KEY}&language=en-US`).then(res => {\n    console.log(res);\n    if (res.ok) {\n      return res.json();\n    }\n  });\n}\nconst apiFetch = { fetchApi };\nexport default apiFetch;\n","import { useState, useEffect } from 'react';\r\nimport apiFetch from '../../services/fetch/fetch-api'\r\nimport { BrowserRouter, Route, NavLink, Link, useRouteMatch} from 'react-router-dom';\r\n\r\nexport default function HomePage(params) {\r\n     const URL = 'https://api.themoviedb.org/3/trending/movie/week?';\r\n    const [gallery, setGallery] = useState('')\r\n    useEffect(() => {\r\n        apiFetch.fetchApi(URL).then(movies => {\r\n        \r\n            setGallery(movies.results)\r\n        } \r\n        )\r\n\r\n        \r\n        return () => {\r\n          \r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h1>Hello World</h1>\r\n\r\n            {gallery && gallery.map(({ name, original_title, id }) => (\r\n                <li key={id}>\r\n                    <Link to={`/movies/${id}`}>{name ? name : original_title}</Link>\r\n                    \r\n                    </li>\r\n            )\r\n                // <NavLink>{movie.name}</NavLink>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport { Route, NavLink, useParams, Link } from 'react-router-dom';\n\nexport default function Cast(params) {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  let queryParams = `https://api.themoviedb.org/3/movie/${movieId}/credits?`;\n\n  useEffect(() => {\n    apiFetch\n      .fetchApi(queryParams)\n      .then(actors => {\n        setCast(actors.cast);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // return () => {\n    //     cleanup\n    // }\n  }, [queryParams]);\n  return (\n    <div>\n      <p>Additional Information</p>\n      <ul>\n        {cast &&\n          cast.map(({ name, profile_path, character }) => (\n            <li>\n              <img\n                src={`https://image.tmdb.org/t/p/original${profile_path}`}\n                alt={name}\n                width=\"150\"\n              />\n              <h3>{name}</h3>\n              <p>\n                Character: <span>{character}</span>\n              </p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport { Route, NavLink, useParams, Link } from 'react-router-dom';\n\nexport default function Reviews(params) {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  let queryParams = `https://api.themoviedb.org/3/movie/${movieId}/reviews?`;\n\n  useEffect(() => {\n    apiFetch\n      .fetchApi(queryParams)\n      .then(reviews => {\n        setReviews(reviews.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // return () => {\n    //     cleanup\n    // }\n  }, [queryParams]);\n  return (\n    <div>\n      <ul>\n        {reviews &&\n          reviews.map(({ author, content }) => (\n            <li>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n      </ul>\n      {reviews.length === 0 && <p>We don't have ane reviews for this movie.</p>}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport apiFetch from '../../services/fetch/fetch-api';\nimport { Route, useParams, Link } from 'react-router-dom';\n\nimport './MovieDetailsPag.css';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  let queryParams = `https://api.themoviedb.org/3/movie/${movieId}?`;\n\n  const [movie, setMovie] = useState([]);\n  console.log(URL);\n\n  useEffect(() => {\n    apiFetch\n      .fetchApi(queryParams)\n      .then(movie => {\n     \n        setMovie(movie);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // return () => {\n    //     cleanup\n    // }\n  }, [queryParams]);\n  const createName = () => {\n    return movie.title ? movie.title : movie.original_title;\n  };\n  const createPoster = () => {\n    return movie.poster_path ? movie.poster_path : movie.backdrop_path;\n  };\n  return (\n    <div>\n      <div className=\"wrap-page\">\n        <div>\n          {' '}\n          <img\n            src={`https://image.tmdb.org/t/p/original${createPoster()}`}\n            alt={createName() ? createName() : 'No info'}\n            width=\"300\"\n          />\n        </div>\n        <div>\n          <h1>\n            {createName() ? createName() : 'No info'}\n            <span>({parseInt(movie.release_date)})</span>\n          </h1>\n          <p>User scope: </p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {movie.genres &&\n             movie.genres.map(({ name }) => <span>{name}</span>)}\n          </p>\n        </div>\n      </div>\n      <div className=\"wrap-dop\">\n        <Link to={`/movies/${movieId}/cast`}>Cast </Link>\n        <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n      </div>\n      <div>\n        <Route path=\"/movies/:movieId/cast\">\n          <Cast/>\n        </Route>\n        <Route path=\"/movies/:movieId/reviews\">\n          <Reviews/>\n        </Route>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\r\n\r\nexport default function MoviesPage(params) {\r\n    return (\r\n        <div>\r\n            <h1>Welcome to Hell!</h1>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\n\nexport default function NotFoundView(params) {\n  return (\n    <div>\n      <h1>404 Not found pages</h1>\n    </div>\n  );\n}\n","import { Switch, Route } from 'react-router-dom';\nimport AppBar from '../AppBar/AppBar';\nimport HomePage from '../HomePage';\nimport MovieDetailsPage from '../MovieDetailsPage/MovieDetailsPage';\nimport MoviesPage from '../MoviesPage';\nimport NotFoundView from '../NotFoundView/NotFoundView';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppBar></AppBar>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n\n        <Route path=\"/movies/:movieId\">\n          <MovieDetailsPage />\n        </Route>\n        <Route path=\"/movies\">\n          <MoviesPage />\n        </Route>\n        <Route>\n          <NotFoundView />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}